{"version":3,"sources":["common/ColorPalette.ts","components/WindowWrapper.tsx","components/TodoTemplate.tsx","model/TodoItemData.ts","stores/TodoListStore.ts","stores/useStore.ts","components/TodoAddButton.tsx","components/TodoHead.tsx","hooks/useClickOutside.tsx","components/TodoItem.tsx","components/TodoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ColorPalette","WindowWrapperBlock","styled","div","SKYBLUE","WindowWrapper","children","TodoTemplateBlock","WHITE","TodoTemplate","TodoItemData","_title","_done","id","title","done","this","counter","TodoListStore","observable","model","items","addItem","item","unshift","addDefaultItem","createDefault","removeItem","idx","findIndex","splice","changeItem","newItem","useStore","todolist","TodoAddButtonBlock","TodoAddButton","size","onClick","TodoHeadBlock","LIGHTGREY","TodoHead","useClickOutside","ref","onClickOutside","exceptRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","TodoItemBlock","GREY","props","highlight","css","CheckBox","BLACK","Title","input","checked","RemoveButton","TodoItem","data","refTitle","useRef","useState","editMode","setEditMode","setTitle","newTitle","value","clickTitle","select","toggleDone","removeThis","useObserver","readOnly","onChange","TodoListBlock","TodoList","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40d53423.chunk.js","sourcesContent":["enum ColorPalette {\n  BLACK = '#000000',\n  WHITE = '#ffffff',\n  BLUE = '#0000ff',\n  SKYBLUE = '#e9ecef',\n  LIGHTGREY = '#d3d3d3',\n  GREY = '#808080',\n}\n\nexport default ColorPalette;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ColorPalette from '../common/ColorPalette';\n\ntype WindowWrapperProps = {\n  children: React.ReactNode;\n};\n\nconst WindowWrapperBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100vmax;\n  height: 100vmin;\n  background: ${ColorPalette.SKYBLUE};\n\n  & * {\n    box-sizing: border-box;\n  }\n`;\n\nfunction WindowWrapper({ children }: WindowWrapperProps): JSX.Element {\n  return <WindowWrapperBlock>{children}</WindowWrapperBlock>;\n}\n\nexport default WindowWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ColorPalette from '../common/ColorPalette';\n\ntype TodoTemplateProps = {\n  children: React.ReactNode;\n};\n\nconst TodoTemplateBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  flex-direction: column;\n\n  width: 512px;\n  height: 768px;\n  padding: 20px;\n  padding-bottom: 40px;\n  border-radius: 20px;\n  overflow-y: auto;\n  background: ${ColorPalette.WHITE};\n`;\n\nfunction TodoTemplate({ children }: TodoTemplateProps): JSX.Element {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;\n","/* eslint-disable lines-between-class-members */\n\nclass TodoItemData {\n  private static counter = 0;\n\n  public readonly id: number;\n  public title: string;\n  public done: boolean;\n\n  constructor(_title: string, _done: boolean) {\n    this.title = _title;\n    this.done = _done;\n    this.id = TodoItemData.counter;\n    TodoItemData.counter += 1;\n  }\n\n  static createDefault(): TodoItemData {\n    return new TodoItemData('제목을 입력해 주세요', false);\n  }\n}\n\nexport default TodoItemData;\n","import { observable } from 'mobx';\nimport TodoListData from '../model/TodoListData';\nimport TodoItemData from '../model/TodoItemData';\n\ninterface TodoListStoreType {\n  model: TodoListData;\n\n  addItem: (item: TodoItemData) => void;\n  addDefaultItem: () => void;\n  removeItem: (id: number) => void;\n  changeItem: (id: number, newItem: TodoItemData) => void;\n}\n\nconst TodoListStore = observable<TodoListStoreType>({\n  model: { items: [] },\n\n  addItem(item: TodoItemData) {\n    this.model.items.unshift(item);\n  },\n\n  addDefaultItem() {\n    this.model.items.unshift(TodoItemData.createDefault());\n  },\n\n  removeItem(id: number) {\n    const idx = this.model.items.findIndex(item => item.id === id);\n    this.model.items.splice(idx, 1);\n  },\n\n  changeItem(id: number, newItem: TodoItemData) {\n    const idx = this.model.items.findIndex(item => item.id === id);\n    this.model.items[idx] = newItem;\n  },\n});\n\nexport default TodoListStore;\n","import TodoListStore from './TodoListStore';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction useStore() {\n  return {\n    todolist: TodoListStore,\n  };\n}\n\nexport default useStore;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport useStore from '../stores/useStore';\n\nconst { todolist } = useStore();\n\nconst TodoAddButtonBlock = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  /* TODO: MdAdd 사이즈 조절하는 다른 방법은 없는지? */\n`;\n\nfunction TodoAddButton(): JSX.Element {\n  return (\n    <TodoAddButtonBlock>\n      <MdAdd size=\"40px\" onClick={() => todolist.addDefaultItem()} />\n    </TodoAddButtonBlock>\n  );\n}\n\nexport default TodoAddButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ColorPalette from '../common/ColorPalette';\nimport TodoAddButton from './TodoAddButton';\n\nconst TodoHeadBlock = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 10px;\n  border-bottom: ${ColorPalette.LIGHTGREY};\n`;\n\nfunction TodoHead(): JSX.Element {\n  return (\n    <TodoHeadBlock>\n      <h1>TodoList</h1>\n      <TodoAddButton />\n    </TodoHeadBlock>\n  );\n}\n\nexport default TodoHead;\n","import React, { useRef, useEffect, ReactNode } from 'react';\n\nconst useClickOutside: (\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: () => void,\n  exceptRef?: React.RefObject<HTMLElement>\n) => void = (ref, onClickOutside, exceptRef) => {\n  useEffect(() => {\n    const handleClickOutside = (event: any) => {\n      if (\n        ref.current &&\n        !ref.current.contains(event.target as Node) &&\n        !exceptRef?.current?.contains(event.target as Node)\n      ) {\n        onClickOutside();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref]);\n};\n\nexport default useClickOutside;\n","import React, { useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useObserver } from 'mobx-react';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport ColorPalette from '../common/ColorPalette';\nimport TodoItemData from '../model/TodoItemData';\nimport useStore from '../stores/useStore';\nimport useClickOutside from '../hooks/useClickOutside';\n\nconst { todolist } = useStore();\n\ntype TodoItemProps = {\n  data: TodoItemData;\n};\n\nconst TodoItemBlock = styled.div<{ highlight: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid ${ColorPalette.GREY};\n  padding: 20px 10px;\n\n  &:nth-child(1) {\n    border-top: 1px solid ${ColorPalette.GREY};\n  }\n\n  ${props =>\n    props.highlight &&\n    css`\n      background-color: ${ColorPalette.LIGHTGREY};\n    `}\n`;\n\nconst CheckBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 17px;\n  height: 17px;\n  border: 1px solid ${ColorPalette.BLACK};\n  color: ${ColorPalette.BLACK};\n  background-color: ${ColorPalette.WHITE};\n  cursor: pointer;\n  font-size: 20px;\n`;\n\nconst Title = styled.input<{ checked: boolean }>`\n  margin-left: 15px;\n  flex: 1;\n  font-size: 15px;\n  font-weight: bold;\n  color: ${ColorPalette.BLACK};\n  padding: 10px 8px;\n\n  &:read-only {\n    border-color: transparent;\n  }\n\n  ${props =>\n    props.checked &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n\nconst RemoveButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 15px;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\nfunction TodoItem({ data }: TodoItemProps): JSX.Element {\n  const refTitle = useRef<HTMLInputElement>(null);\n  const [editMode, setEditMode] = useState(false);\n  const setEditOn = () => setEditMode(true);\n  const setEditOff = () => setEditMode(false);\n  const setTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value;\n    todolist.changeItem(data.id, {\n      ...data,\n      title: newTitle,\n    });\n  };\n  const clickTitle = () => {\n    if (!editMode) {\n      setEditOn();\n      // TODO: syntax sugar?\n      (refTitle as any).current.select();\n    }\n  };\n  const toggleDone = () => {\n    todolist.changeItem(data.id, {\n      ...data,\n      done: !data.done,\n    });\n  };\n  const removeThis = () => todolist.removeItem(data.id);\n\n  useClickOutside(refTitle, setEditOff);\n\n  return useObserver(() => (\n    <>\n      <TodoItemBlock highlight={editMode}>\n        <CheckBox onClick={toggleDone}>\n          {data.done && <MdDone size=\"15px\" />}\n        </CheckBox>\n        <Title\n          ref={refTitle}\n          value={data.title}\n          checked={data.done}\n          readOnly={!editMode}\n          onClick={clickTitle}\n          onChange={setTitle}\n        />\n        <RemoveButton>\n          <MdDelete onClick={removeThis} />\n        </RemoveButton>\n      </TodoItemBlock>\n    </>\n  ));\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useObserver } from 'mobx-react';\nimport TodoItem from './TodoItem';\nimport useStore from '../stores/useStore';\n\nconst { todolist } = useStore();\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 0px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nfunction TodoList(): JSX.Element {\n  return useObserver(() => (\n    <TodoListBlock>\n      {todolist.model.items.map(item => (\n        <TodoItem key={item.id} data={item} />\n      ))}\n    </TodoListBlock>\n  ));\n}\n\nexport default TodoList;\n","import React from 'react';\nimport WindowWrapper from './components/WindowWrapper';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoItemData from './model/TodoItemData';\nimport useStore from './stores/useStore';\n\nconst { todolist } = useStore();\ntodolist.addItem(new TodoItemData('TodoList Mobx로 만들기', true));\ntodolist.addItem(new TodoItemData('랩 미팅 준비', false));\ntodolist.addItem(new TodoItemData('토요일 약속 장소 예약하기', false));\n\nfunction App(): JSX.Element {\n  return (\n    <WindowWrapper>\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n      </TodoTemplate>\n    </WindowWrapper>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}