{"version":3,"sources":["utils/ColorUtils.ts","components/TodoTemplate.tsx","stores/TodoListStore.ts","utils/useStore.ts","components/TodoAddButton.tsx","components/TodoHead.tsx","hooks/useClickOutside.tsx","components/TodoItem.tsx","components/TodoList.tsx","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["ColorUtils","TodoTemplateWrapper","styled","div","WHITE","TodoTemplate","props","children","currentId","model","items","makeAutoObservable","this","title","done","unshift","id","addItem","splice","findIndexById","newItem","idx","findIndex","item","Error","useStore","todolist","TodoListStore","TodoAddButtonWrapper","TodoAddButton","size","onClick","addDefaultItem","TodoHeadWrapper","LIGHTGREY","TodoHead","useClickOutside","ref","onClickOutside","exceptRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","TodoItemWrapper","GREY","highlight","css","CheckBox","BLACK","Title","input","checked","RemoveButton","TodoItem","data","refTitle","useRef","useState","editMode","setEditMode","clickTitle","select","setTitle","newTitle","value","changeItem","toggleDone","removeThis","removeItem","useObserver","readOnly","onChange","TodoListWrapper","TodoList","map","MainPage","GlobalStyle","createGlobalStyle","SKYBLUE","App","component","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86593ef6.chunk.js","sourcesContent":["enum ColorUtils {\n  BLACK = '#000000',\n  WHITE = '#ffffff',\n  BLUE = '#0000ff',\n  SKYBLUE = '#e9ecef',\n  LIGHTGREY = '#d3d3d3',\n  GREY = '#808080',\n}\n\nexport default ColorUtils;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ColorUtils from '../utils/ColorUtils';\n\nconst TodoTemplateWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  flex-direction: column;\n\n  width: 512px;\n  height: 768px;\n  padding: 20px;\n  padding-bottom: 40px;\n  border-radius: 20px;\n  overflow-y: auto;\n  background: ${ColorUtils.WHITE};\n`;\n\ninterface TodoTemplateProps {\n  children: React.ReactNode;\n}\n\nconst TodoTemplate: React.FC<TodoTemplateProps> = props => {\n  const { children } = props;\n\n  return <TodoTemplateWrapper>{children}</TodoTemplateWrapper>;\n};\n\nexport default TodoTemplate;\n","import { makeAutoObservable } from 'mobx';\nimport TodoListData from '../models/TodoListData';\nimport TodoItemData from '../models/TodoItemData';\n\nclass TodoListStore {\n  currentId = 0;\n\n  public model: TodoListData = { items: [] };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  addItem(title: string, done: boolean): void {\n    this.model.items.unshift({\n      id: this.currentId,\n      title,\n      done,\n    });\n\n    this.currentId += 1;\n  }\n\n  addDefaultItem(): void {\n    this.addItem('제목을 입력해 주세요', false);\n  }\n\n  removeItem(id: number): void {\n    this.model.items.splice(this.findIndexById(id), 1);\n  }\n\n  changeItem(id: number, newItem: TodoItemData): void {\n    this.model.items[this.findIndexById(id)] = newItem;\n  }\n\n  private findIndexById(id: number): number {\n    const idx = this.model.items.findIndex(item => item.id === id);\n    if (idx === -1) {\n      throw Error(`Unexisted ID: ${id}`);\n    }\n    return idx;\n  }\n}\n\nexport default new TodoListStore();\n","import TodoListStore from '../stores/TodoListStore';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction useStore() {\n  return {\n    todolist: TodoListStore,\n  };\n}\n\nexport default useStore;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport useStore from '../utils/useStore';\n\nconst TodoAddButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  /* TODO: MdAdd 사이즈 조절하는 다른 방법은 없는지? */\n`;\n\nconst TodoAddButton: React.FC = () => {\n  const { todolist } = useStore();\n\n  const addDefaultTodo = () => {\n    todolist.addDefaultItem();\n  };\n\n  return (\n    <TodoAddButtonWrapper>\n      <MdAdd size=\"40px\" onClick={addDefaultTodo} />\n    </TodoAddButtonWrapper>\n  );\n};\n\nexport default TodoAddButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ColorUtils from '../utils/ColorUtils';\nimport TodoAddButton from './TodoAddButton';\n\nconst TodoHeadWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 10px;\n  border-bottom: ${ColorUtils.LIGHTGREY};\n`;\n\nconst TodoHead: React.FC = () => {\n  return (\n    <TodoHeadWrapper>\n      <h1>TodoList</h1>\n      <TodoAddButton />\n    </TodoHeadWrapper>\n  );\n};\n\nexport default TodoHead;\n","import React, { useRef, useEffect, ReactNode } from 'react';\n\nconst useClickOutside: (\n  ref: React.RefObject<HTMLElement>,\n  onClickOutside: () => void,\n  exceptRef?: React.RefObject<HTMLElement>\n) => void = (ref, onClickOutside, exceptRef) => {\n  useEffect(() => {\n    const handleClickOutside = (event: any) => {\n      if (\n        ref.current &&\n        !ref.current.contains(event.target as Node) &&\n        !exceptRef?.current?.contains(event.target as Node)\n      ) {\n        onClickOutside();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [ref]);\n};\n\nexport default useClickOutside;\n","import React, { useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useObserver } from 'mobx-react';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport ColorUtils from '../utils/ColorUtils';\nimport TodoItemData from '../models/TodoItemData';\nimport useStore from '../utils/useStore';\nimport useClickOutside from '../hooks/useClickOutside';\n\nconst TodoItemWrapper = styled.div<{ highlight: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid ${ColorUtils.GREY};\n  padding: 20px 10px;\n\n  &:nth-child(1) {\n    border-top: 1px solid ${ColorUtils.GREY};\n  }\n\n  ${props =>\n    props.highlight &&\n    css`\n      background-color: ${ColorUtils.LIGHTGREY};\n    `}\n`;\n\nconst CheckBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 17px;\n  height: 17px;\n  border: 1px solid ${ColorUtils.BLACK};\n  color: ${ColorUtils.BLACK};\n  background-color: ${ColorUtils.WHITE};\n  cursor: pointer;\n  font-size: 20px;\n`;\n\nconst Title = styled.input<{ checked: boolean }>`\n  margin-left: 15px;\n  flex: 1;\n  font-size: 15px;\n  font-weight: bold;\n  color: ${ColorUtils.BLACK};\n  padding: 10px 8px;\n\n  &:read-only {\n    border-color: transparent;\n  }\n\n  ${props =>\n    props.checked &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n\nconst RemoveButton = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 15px;\n  font-size: 20px;\n  cursor: pointer;\n`;\n\ninterface TodoItemProps {\n  data: TodoItemData;\n}\n\nconst TodoItem: React.FC<TodoItemProps> = props => {\n  const { data } = props;\n  const { todolist } = useStore();\n\n  const refTitle = useRef<HTMLInputElement>(null);\n  const [editMode, setEditMode] = useState(false);\n\n  useClickOutside(refTitle, () => {\n    setEditMode(false);\n  });\n\n  const clickTitle = () => {\n    if (!editMode) {\n      setEditMode(true);\n      (refTitle as any).current.select(); // syntax sugar\n    }\n  };\n  const setTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = event.target.value;\n    todolist.changeItem(data.id, {\n      ...data,\n      title: newTitle,\n    });\n  };\n  const toggleDone = () => {\n    todolist.changeItem(data.id, {\n      ...data,\n      done: !data.done,\n    });\n  };\n  const removeThis = () => {\n    todolist.removeItem(data.id);\n  };\n\n  return useObserver(() => (\n    <TodoItemWrapper highlight={editMode}>\n      <CheckBox onClick={toggleDone}>\n        {data.done && <MdDone size=\"15px\" />}\n      </CheckBox>\n      <Title\n        ref={refTitle}\n        value={data.title}\n        checked={data.done}\n        readOnly={!editMode}\n        onClick={clickTitle}\n        onChange={setTitle}\n      />\n      <RemoveButton>\n        <MdDelete onClick={removeThis} />\n      </RemoveButton>\n    </TodoItemWrapper>\n  ));\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useObserver } from 'mobx-react';\nimport useStore from '../utils/useStore';\nimport TodoItem from './TodoItem';\n\nconst TodoListWrapper = styled.div`\n  flex: 1;\n  padding: 20px 0px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nconst TodoList: React.FC = () => {\n  const { todolist } = useStore();\n\n  return useObserver(() => (\n    <TodoListWrapper>\n      {todolist.model.items.map(item => (\n        <TodoItem key={item.id} data={item} />\n      ))}\n    </TodoListWrapper>\n  ));\n};\n\nexport default TodoList;\n","import React from 'react';\nimport TodoTemplate from '../components/TodoTemplate';\nimport TodoHead from '../components/TodoHead';\nimport TodoList from '../components/TodoList';\n\nconst MainPage: React.FC = () => {\n  return (\n    <TodoTemplate>\n      <TodoHead />\n      <TodoList />\n    </TodoTemplate>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport ColorUtils from './utils/ColorUtils';\nimport MainPage from './pages/MainPage';\nimport useStore from './utils/useStore';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 100%;\n    height: 100%;\n    background: ${ColorUtils.SKYBLUE};\n\n    & * {\n      box-sizing: border-box;\n    }\n  }\n`;\n\nconst App: React.FC = () => {\n  const { todolist } = useStore();\n  todolist.addItem('TodoList Mobx로 만들기', true);\n  todolist.addItem('랩 미팅 준비', false);\n  todolist.addItem('토요일 약속 장소 예약하기', false);\n\n  return (\n    <BrowserRouter>\n      <GlobalStyle />\n      <Switch>\n        <Route component={MainPage} path=\"/todolist-react-ts\" exact />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}